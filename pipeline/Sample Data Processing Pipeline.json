{
	"name": "Sample Data Processing Pipeline",
	"properties": {
		"description": "This pipeline uses the sample config file and copies files from on-premise to the Storage account and Storage account to Staging Tables and Increment load to Main Table with Sending Success and Error Messages ",
		"activities": [
			{
				"name": "SampleDataConfigLookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "SampleConfigDataDelimiter",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Foreach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SampleDataConfigLookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SampleDataConfigLookup').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data Storage Account",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "FileServerReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DelimitedText3",
									"type": "DatasetReference",
									"parameters": {
										"HostName1": {
											"value": "@item().hostname",
											"type": "Expression"
										},
										"Username1": {
											"value": "@item().username",
											"type": "Expression"
										},
										"FileName": {
											"value": "@item().filename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DelimitedText4",
									"type": "DatasetReference",
									"parameters": {
										"StorageAccountName1": {
											"value": "@item().StoreAccName",
											"type": "Expression"
										},
										"Containername": {
											"value": "@item().containername",
											"type": "Expression"
										},
										"Foldername1": {
											"value": "@item().foldername",
											"type": "Expression"
										},
										"FileName2": {
											"value": "@item().filename",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Copy data to StgTables",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy data Storage Account",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "truncate table \"@{item().DestTable}\"",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DelimitedText5",
									"type": "DatasetReference",
									"parameters": {
										"containerName2": {
											"value": "@item().containername",
											"type": "Expression"
										},
										"FolderName2": {
											"value": "@item().foldername",
											"type": "Expression"
										},
										"FileName2": {
											"value": "@item().filename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference",
									"parameters": {
										"SQLServerName2": {
											"value": "@item().ServerName",
											"type": "Expression"
										},
										"DBName2": {
											"value": "@item().DatabaseName",
											"type": "Expression"
										},
										"DBUsername2": {
											"value": "@item().DBUSerName",
											"type": "Expression"
										},
										"TableName2": {
											"value": "@item().DestTable",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Stored procedure to copy to Maintable",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data to StgTables",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@item().StoredProcedure",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "linkedService1",
								"type": "LinkedServiceReference",
								"parameters": {
									"ServerName4": {
										"value": "@item().ServerName",
										"type": "Expression"
									},
									"DBNAME4": {
										"value": "@item().DatabaseName",
										"type": "Expression"
									},
									"DBUserName4": {
										"value": "@item().DBUSerName",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "FSDRank",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Foreach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SalesData",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2022-08-04T10:30:27Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}